"""Update Wallettransaction

Revision ID: c95e63004c08
Revises: 00e5147f7e6e
Create Date: 2025-05-14 20:30:28.870111

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "c95e63004c08"
down_revision: Union[str, None] = "00e5147f7e6e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Создаем тип ENUM если его нет
    op.execute(
        """
           DO $$
           BEGIN
               IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'paymentworker') THEN
                   CREATE TYPE paymentworker AS ENUM ('stripe', 'cloudpayments', 'other');
               END IF;
           END$$;
       """
    )
    op.add_column(
        "wallet_transactions", sa.Column("external_id", sa.String(), nullable=True)
    )
    op.add_column(
        "wallet_transactions", sa.Column("idempotency_key", sa.String(), nullable=False)
    )
    op.add_column(
        "wallet_transactions",
        sa.Column(
            "payment_worker",
            sa.Enum("STRIPE", "CLOUDPAYMENTS", name="paymentworker"),
            nullable=True,
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("wallet_transactions", "payment_worker")
    op.drop_column("wallet_transactions", "idempotency_key")
    op.drop_column("wallet_transactions", "external_id")
    op.execute("DROP TYPE IF EXISTS paymentworker")
    # ### end Alembic commands ###
