syntax = "proto3";


package wallet;


service WalletService {
  // Создание нового кошелька для пользователя
  rpc CreateWallet (CreateWalletRequest) returns (WalletResponse);

  // Получение баланса по пользователю
  rpc GetBalance (GetBalanceRequest) returns (BalanceResponse);

  // Перевод средств между кошельками
  rpc Transfer (TransferRequest) returns (OperationResponse);
  // Конвертация валюты в кошельке
  rpc Convert (ConvertRequest) returns (OperationResponse);

  // Списание средств с кошелька
  rpc Withdraw (WithdrawRequest) returns (OperationResponse);

  // Создание транзакции на оплату через платежный шлюз
  rpc CreatePaymentTransaction (CreatePaymentTransactionRequest) returns (PaymentTransactionResponse);

  // Callback от stripe
  rpc HandleStripePayment (StripePaymentNotification) returns (WebhookResponse);
}

// ========== Request/Response Messages ========== //

message CreateWalletRequest {
  string user_id = 1;          // ID пользователя
}

message WalletResponse {
  string wallet_id = 1;        // ID созданного кошелька
  string created_at = 2;       // Дата создания (ISO 8601)
}

message GetBalanceRequest {
  string user_id = 1;          // ID пользователя
  optional string currency = 2; // Опциональная фильтрация по валюте
}

message BalanceResponse {
  string user_id = 1;          // ID пользователя
  repeated BalanceEntry balances = 2;

  message BalanceEntry {
    string currency = 1;
    double amount = 2;
    string type = 3;           // FIAT/CRYPTO
  }
}

message TransferRequest {
  string from_user_id = 1;     // ID пользователя-отправителя
  string to_user_id = 2;       // ID пользователя-получателя
  double amount = 3;           // Сумма перевода
  string currency = 4;         // Валюта перевода
  string idempotency_key = 5;  // Ключ идемпотентности
}

message WithdrawRequest {
  string user_id = 1;          // ID пользователя
  double amount = 2;           // Сумма списания
  string currency = 3;         // Валюта
  string idempotency_key = 4;  // Ключ идемпотентности
}

message ConvertRequest {
  string user_id = 1;          // ID пользователя
  string from_currency = 2;    // Исходная валюта
  string to_currency = 3;      // Целевая валюта
  double amount = 4;           // Сумма для конвертации
  string idempotency_key = 5;  // Ключ идемпотентности
}

message OperationResponse {
  string correlation_id = 1;     // ID операции
  string status = 2;           // Статус (PROCESSING/COMPLETED/FAILED)
}

message CreatePaymentTransactionRequest {
  string user_id = 1;          // ID пользователя
  double amount = 2;           // Сумма пополнения
  string currency = 3;         // Валюта
  string gateway = 4;          // платежный шлюз
  string idempotency_key = 5;
}

message PaymentTransactionResponse {
  string redirect_url = 1;
}

message StripePaymentNotification {
  // Идентификация события
  string event_id = 1;                  // "evt_3RQaa9C1jcvqfRDJ15F0w4tv"
  string event_type = 2;                // "payment_intent.succeeded"
  bool livemode = 4;                    // false для тестового режима

  // Подпись вебхука (для верификации)

  // Платежные данные
  message PaymentIntent {
    string id = 1;                      // "pi_3RQaa9C1jcvqfRDJ1HWG7Ku7"
    int32 amount = 2;                   // 2000 (в центах/копейках)
    string currency = 3;                // "usd"
    string status = 4;                  // "succeeded"
    map<string, string> metadata = 5;

    // Доп. поля по необходимости
    string payment_method = 7;          // "pm_1RQaa8C1jcvqfRDJDDpUO0ce"
    string customer_email = 8;          // Опционально
  }

  PaymentIntent payment_intent = 5;

  // Технические поля
  string idempotency_key = 6;           // "b6ea909e-f968-472d-b477-3a9b973990c3"
  string webhook_id = 7;                // Доп. идентификатор вебхука
}


// Ответы
message WebhookResponse {
  bool success = 1;
  string message = 2;
}
